name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quality:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: pcov
          extensions: mbstring, dom, curl, fileinfo, json, pdo_sqlite
          tools: composer:v2

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm ci --legacy-peer-deps

      - name: Build frontend assets
        run: npm run build

      - name: Prepare app
        run: |
          # Create .env with APP_KEY
          php -r "echo 'APP_KEY=base64:'.base64_encode(random_bytes(32)).PHP_EOL;" > .env
          # Create empty SQLite database for testing
          mkdir -p database
          touch database/unblock_testing.sqlite
          # Run migrations
          DB_CONNECTION=sqlite DB_DATABASE=database/unblock_testing.sqlite php artisan migrate --force

      - name: Run quality gate (lint + phpstan + tests with coverage>=80)
        run: |
          composer check-full

      - name: Composer security audit
        if: always()
        run: composer audit --no-interaction --no-ansi
